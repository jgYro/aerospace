# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

default-root-container-layout = 'accordion'

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []


start-at-login = false

enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

accordion-padding = 30

default-root-container-orientation = 'auto'

key-mapping.preset = 'qwerty'

on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

[mode.main.binding]

# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-ctrl-slash = 'layout tiles horizontal vertical'
cmd-ctrl-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-ctrl-h = 'focus left'
cmd-ctrl-j = 'focus down'
cmd-ctrl-k = 'focus up'
cmd-ctrl-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-ctrl-shift-h = 'move left'
cmd-ctrl-shift-j = 'move down'
cmd-ctrl-shift-k = 'move up'
cmd-ctrl-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-cmd-1 = 'workspace 1'
ctrl-cmd-2 = 'workspace 2'
ctrl-cmd-3 = 'workspace 3'
ctrl-cmd-4 = 'workspace 4'
ctrl-cmd-5 = 'workspace 5'
ctrl-cmd-6 = 'workspace 6'
ctrl-cmd-7 = 'workspace 7'
ctrl-cmd-8 = 'workspace 8'
ctrl-cmd-9 = 'workspace 9'
ctrl-cmd-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
ctrl-cmd-b = 'workspace B'
ctrl-cmd-c = 'workspace C'
ctrl-cmd-d = 'workspace D'
ctrl-cmd-e = 'workspace E'
ctrl-cmd-f = 'workspace F'
ctrl-cmd-g = 'workspace G'
ctrl-cmd-i = 'workspace I'
ctrl-cmd-m = 'workspace M'
ctrl-cmd-n = 'workspace N'
ctrl-cmd-o = 'workspace O'
ctrl-cmd-p = 'workspace P'
ctrl-cmd-q = 'workspace Q'
ctrl-cmd-r = 'workspace R'
ctrl-cmd-s = 'workspace S'
ctrl-cmd-t = 'workspace T'
ctrl-cmd-u = 'workspace U'
ctrl-cmd-w = 'workspace W'
ctrl-cmd-x = 'workspace X'
ctrl-cmd-y = 'workspace Y'
ctrl-cmd-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-cmd-shift-1 = 'move-node-to-workspace 1'
ctrl-cmd-shift-2 = 'move-node-to-workspace 2'
ctrl-cmd-shift-3 = 'move-node-to-workspace 3'
ctrl-cmd-shift-4 = 'move-node-to-workspace 4'
ctrl-cmd-shift-5 = 'move-node-to-workspace 5'
ctrl-cmd-shift-6 = 'move-node-to-workspace 6'
ctrl-cmd-shift-7 = 'move-node-to-workspace 7'
ctrl-cmd-shift-8 = 'move-node-to-workspace 8'
ctrl-cmd-shift-9 = 'move-node-to-workspace 9'
ctrl-cmd-shift-a = 'move-node-to-workspace A'
ctrl-cmd-shift-b = 'move-node-to-workspace B'
ctrl-cmd-shift-c = 'move-node-to-workspace C'
ctrl-cmd-shift-d = 'move-node-to-workspace D'
ctrl-cmd-shift-e = 'move-node-to-workspace E'
ctrl-cmd-shift-f = 'move-node-to-workspace F'
ctrl-cmd-shift-g = 'move-node-to-workspace G'
ctrl-cmd-shift-i = 'move-node-to-workspace I'
ctrl-cmd-shift-m = 'move-node-to-workspace M'
ctrl-cmd-shift-n = 'move-node-to-workspace N'
ctrl-cmd-shift-o = 'move-node-to-workspace O'
ctrl-cmd-shift-p = 'move-node-to-workspace P'
ctrl-cmd-shift-q = 'move-node-to-workspace Q'
ctrl-cmd-shift-r = 'move-node-to-workspace R'
ctrl-cmd-shift-s = 'move-node-to-workspace S'
ctrl-cmd-shift-t = 'move-node-to-workspace T'
ctrl-cmd-shift-u = 'move-node-to-workspace U'
ctrl-cmd-shift-w = 'move-node-to-workspace W'
ctrl-cmd-shift-x = 'move-node-to-workspace X'
ctrl-cmd-shift-y = 'move-node-to-workspace Y'
ctrl-cmd-shift-z = 'move-node-to-workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
# alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']


[workspace-to-monitor-force-assignment]
A = 'Built-in Retina Display'
M = 'Built-in Retina Display'
Y = 'Built-in Retina Display'
P = ['LS32CG51x', 'Sidecar Display', 'Built-in Retina Display']
B = ['LS32CG51x', 'DELL P2222H', 'Sidecar Display', 'Built-in Retina Display']
C = ['LG ULTRAGEAR', 'Built-in Retina Display']
T = ['LG ULTRAGEAR', 'Built-in Retina Display']
S = ['Sidecar Display', 'Built-in Retina Display']
N = ['Sidecar Display', 'Built-in Retina Display']
1 = ['LS32CG51x', 'DELL P2222H', 'Built-in Retina Display']
2 = ['LG ULTRAGEAR', 'Built-in Retina Display']
3 = ['Built-in Retina Display']
4 = ['Sidecar Display', 'Built-in Retina Display']

# Browser
[[on-window-detected]]
if.app-id = 'com.google.Safari'
run = 'move-node-to-workspace B'

# YouTube
# [[on-window-detected]]
# if.app-id = 'com.apple.Safari'
# run = 'move-node-to-workspace Y'

# Chat
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'move-node-to-workspace C'
[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace C'

# Editor
[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = 'move-node-to-workspace E'

# Music
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = 'move-node-to-workspace M'

# Audio Control
[[on-window-detected]]
if.app-id = 'com.Arturia.AudioFuseControlCenter'
run = 'move-node-to-workspace A'

# Note Sketch
[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'move-node-to-workspace N'

# Productivity
[[on-window-detected]]
if.app-id = 'com.jgraph.drawio.desktop'
run = 'move-node-to-workspace P'
[[on-window-detected]]
if.app-id = 'com.atlassian.trello'
run = 'move-node-to-workspace P'

# Stocks
[[on-window-detected]]
if.app-id = 'com.tradingview.tradingviewapp.desktop'
run = 'move-node-to-workspace S'

# Emacs
[[on-window-detected]]
if.app-id = 'org.gnu.Emacs'
run = 'move-node-to-workspace E'
